local placeId = game.PlaceId
local allowedPlaceId = 14025779410

if placeId ~= allowedPlaceId then
    return
end

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Avatar Fighting Simulator",
    SubTitle = "Made By Nozer Hub | Arceus X ",
    TabWidth = 120,
    Size = UDim2.fromOffset(500, 350),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Credits = Window:AddTab({ Title = "| Info", Icon = "scroll" }),
    Settings = Window:AddTab({ Title = "| Settings", Icon = "settings" }),
    Farm = Window:AddTab({ Title = "| Farm", Icon = "swords" }), 
    Teleport = Window:AddTab({ Title = "| Teleport", Icon = "compass" }),
    Summon = Window:AddTab({ Title = "| Summon", Icon = "star" }),
    Misc = Window:AddTab({ Title = "| Misc", Icon = "book" }), 
}

local Options = Fluent.Options

Fluent:Notify({
    Title = "By Nozer Hub",
    Content = "Thanks for using the script",
    Duration = 5
})

local CreditsSection = Tabs.Credits:AddSection("Credits")
local linkParaCopiar = "https://www.youtube.com/@NozerHub"
Tabs.Credits:AddButton({
    Title = "Copy Link Channel",
    Callback = function()
        setclipboard(linkParaCopiar)
    end
})

Tabs.Credits:AddParagraph({
    Title = "Owner: Nozer Hub"
})

Tabs.Credits:AddParagraph({
    Title = "Update 4/12"
})

local AntiAFKEnabled = true
local Toggle = Tabs.Misc:AddToggle("MyToggle", { Title = "Anti AFK", Default = true })

Toggle:OnChanged(function()
    AntiAFKEnabled = Options.MyToggle.Value
end)

Options.MyToggle:SetValue(true)

local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
LocalPlayer.Idled:Connect(function()
    if AntiAFKEnabled then
        VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        task.wait(1)
        VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    end
end)

Tabs.Misc:AddButton({
    Title = "Server Hop",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local HttpService = game:GetService("HttpService")
        local placeId = game.PlaceId

        local function serverHop()
            local servers
            local cursor = ""

            local success, response = pcall(function()
                local url = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. cursor
                return HttpService:JSONDecode(game:HttpGet(url))
            end)

            if success and response and response.data then
                servers = response.data
            else
                return
            end

            for _, server in ipairs(servers) do
                if server.id ~= game.JobId and server.playing < server.maxPlayers then
                    TeleportService:TeleportToPlaceInstance(placeId, server.id)
                    return
                end
            end

            if response.nextPageCursor then
                cursor = response.nextPageCursor
                serverHop()
            else
            end
        end

        serverHop()
    end
})

Tabs.Misc:AddButton({
    Title = "Rejoin",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local player = game.Players.LocalPlayer
        TeleportService:Teleport(game.PlaceId, player)
    end
})

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)
Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 3
})

SaveManager:LoadAutoloadConfig()

local Dropdown = Tabs.Summon:AddDropdown("SummonDropdown", {
    Title = "Select Avatar",
    Values = {"1x", "3x", "10x"},
    Multi = false,
    Default = "1x",
})

local Toggle = Tabs.Summon:AddToggle("AutoSummonToggle", {
    Title = "Auto Summon",
    Default = false
})

Toggle:OnChanged(function()
    if Toggle.Value then
        -- Enquanto o Toggle estiver ativado, executar a função repetidamente
        task.spawn(function()
            while Toggle.Value do
                local selectedOption = Dropdown.Value

                if selectedOption == "1x" then
                    local args = {
                        [1] = "Summon",
                        [2] = 1
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CRATE_SUMMON"):FireServer(unpack(args))
                elseif selectedOption == "3x" then
                    local args = {
                        [1] = "Summon",
                        [2] = 2
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CRATE_SUMMON"):FireServer(unpack(args))
                elseif selectedOption == "10x" then
                    local args = {
                        [1] = "Summon",
                        [2] = 3
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CRATE_SUMMON"):FireServer(unpack(args))
                end

                wait(0.1)  -- Espera 0.1 segundos antes de realizar outra invocação
            end
        end)
    end
end)

Toggle:SetValue(false)

local WalkSpeedSection = Tabs.Misc:AddSection("WalkSpeed")

local Input = Tabs.Misc:AddInput("SpeedInput", {
    Title = "Write WalkSpeed",
    Default = "30",
    Placeholder = "Enter Speed",
    Numeric = true,
    Finished = true,
    Callback = function(Value) end
})

Input:OnChanged(function() end)

local Toggle = Tabs.Misc:AddToggle("SpeedToggle", {Title = "Apply WalkSpeed", Default = false})

Toggle:OnChanged(function()
    local player = game:GetService("Players").LocalPlayer
    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
    
    if humanoid then
        if Options.SpeedToggle.Value then
            while Options.SpeedToggle.Value do
                local inputSpeed = tonumber(Input.Value)
                
                if inputSpeed and inputSpeed >= 16 then
                    humanoid.WalkSpeed = inputSpeed
                end
                
                wait(0.5)
            end
        else
            humanoid.WalkSpeed = 16
        end
    end
end)

Options.SpeedToggle:SetValue(false)

local FarmingSection = Tabs.Farm:AddSection("Farming")

local AreaDropdown = Tabs.Farm:AddDropdown("AreaDropdown", {
    Title = "Select Area",
    Values = {"AREA 1", "AREA 2", "AREA 3", "AREA 4", "AREA 5", "AREA 6", "AREA 7"},
    Multi = false,
    Default = 1,
})

local EnemyDropdown = Tabs.Farm:AddDropdown("EnemyDropdown", {
    Title = "Select Enemy",
    Values = {},
    Multi = false,
    Default = 1,
})

local AutoFarmSelectedToggle = Tabs.Farm:AddToggle("AutoFarmSelected", { Title = "Auto Farm Selected Enemy", Default = false })

local selectedArea = "AREA 1"
local selectedEnemy = nil

-- Atualiza os inimigos ao mudar de área
AreaDropdown:OnChanged(function(value)
    selectedArea = value
    local area = workspace.Enemies[selectedArea]
    local enemies = {}

    -- Cria a lista de inimigos
    for _, object in ipairs(area:GetChildren()) do
        if object:IsA("Model") and object:FindFirstChild("HumanoidRootPart") and object.Name ~= "Thief" then
            -- Adiciona o nome do inimigo na lista, sem repetição
            if not table.find(enemies, object.Name) then
                table.insert(enemies, object.Name)
            end
        end
    end

    -- Atualiza o dropdown de inimigos
    EnemyDropdown:SetValues(enemies)
    
    -- Se o toggle estiver ativado, começa a atacar o primeiro inimigo da nova área
    if AutoFarmSelectedToggle.Value and #enemies > 0 then
        selectedEnemy = enemies[1]
    end
end)

-- Atualiza o inimigo selecionado no dropdown
EnemyDropdown:OnChanged(function(value)
    selectedEnemy = value
end)

-- Lógica de ataque automático ao inimigo selecionado
AutoFarmSelectedToggle:OnChanged(function()
    local player = game:GetService("Players").LocalPlayer
    local character = player.Character
    local area = workspace.Enemies[selectedArea]

    -- Verifica se o toggle está ativado
    while AutoFarmSelectedToggle.Value do
        if selectedEnemy then
            local targetEnemy = area:FindFirstChild(selectedEnemy)

            if targetEnemy and targetEnemy:FindFirstChild("HumanoidRootPart") then
                -- Ancorando o personagem para ele não se mover
                character.HumanoidRootPart.Anchored = true

                -- Teleporta o jogador para o inimigo
                local enemyPosition = targetEnemy.HumanoidRootPart.Position
                local playerPosition = character.HumanoidRootPart.Position
                -- Mantém o Y do inimigo para garantir que o personagem não caia
                local teleportPosition = Vector3.new(enemyPosition.X, playerPosition.Y, enemyPosition.Z)
                character:SetPrimaryPartCFrame(CFrame.new(teleportPosition))

                -- Desancla o personagem após teleportar (caso queira ele livre depois de mover)
                wait(0.5)  -- Aguarda um tempo para garantir que o movimento tenha ocorrido
                character.HumanoidRootPart.Anchored = false
            end
        end
        wait(0.1) -- Espera 0.1 segundos antes de tentar novamente
    end
end)

local OthersSection = Tabs.Farm:AddSection("Others")

local player = game:GetService("Players").LocalPlayer
local character = player.Character
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local magnetDropsToggle = Tabs.Farm:AddToggle("MagnetDropsToggle", {
    Title = "Magnet Drops",
    Default = false
})

local function attractOrbs()
    while magnetDropsToggle.Value do
        for _, orb in pairs(workspace:GetChildren()) do
            if orb.Name == "ORB" then
                local direction = (humanoidRootPart.Position - orb.Position).unit
                local force = (humanoidRootPart.Position - orb.Position).magnitude * 10
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
                bodyVelocity.Velocity = direction * force
                bodyVelocity.Parent = orb
                game:GetService("Debris"):AddItem(bodyVelocity, 0.1)
            end
        end
        wait(0.1)
    end
end

magnetDropsToggle:OnChanged(function()
    if magnetDropsToggle.Value then
        attractOrbs()
    end
end)

local Toggle = Tabs.Farm:AddToggle("AutoSpinWheel", {Title = "Auto Spin Wheel", Default = false})

Toggle:OnChanged(function()
    if Toggle.Value then
        while Toggle.Value do
            local args = {
                [1] = "SpinWheel"
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SPIN_WHEEL"):InvokeServer(unpack(args))

            wait(0.1)
        end
    end
end)

local Toggle = Tabs.Farm:AddToggle("AutoClaimRewards", {Title = "Auto Claim Rewards", Default = false})

Toggle:OnChanged(function()
    if Toggle.Value then
        while Toggle.Value do
            for i = 1, 13 do
                local args = {
                    [1] = i
                }

                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CLAIM_REWARD"):FireServer(unpack(args))

                wait(0.1)
            end
        end
    end
end)

local ChestSection = Tabs.Misc:AddSection("Chest")

Tabs.Misc:AddButton({
    Title = "Redeem Chests",
    Callback = function()
        local dailyChest = workspace.Chests:FindFirstChild("DailyReward")
        if dailyChest then
            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, dailyChest, 0)
            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, dailyChest, 1)
        end

        local groupChest = workspace.Chests:FindFirstChild("GroupReward")
        if groupChest then
            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, groupChest, 0)
            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, groupChest, 1)
        end
    end
})

Tabs.Farm:AddButton({
    Title = "Redeem Codes",
    Callback = function()
        local codes = {"1KLIKES", "RELEASE", "WELCOME"}

        for _, code in ipairs(codes) do
            local args = {
                [1] = code
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("REDEEM_CODE"):FireServer(unpack(args))
        end
    end
})

local EquipBestToggle = Tabs.Farm:AddToggle("EquipBestToggle", { Title = "Equip Best Avatars", Default = false })

local args2 = {
    [1] = "Avatars",
    [2] = {
        [1] = "3f89745d387c435cb46b2c85f318c4ec"
    },
    [3] = {}
}

EquipBestToggle:OnChanged(function()
    while EquipBestToggle.Value do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EquipBest"):FireServer(unpack(args2))
        wait(0.1)  -- Intervalo de 0.1 segundo entre as execuções
    end
end)

Tabs.Teleport:AddButton({
    Title = "Area1",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character
        local area = workspace.Area_Boxes["AREA 1"]

        -- Verifica se a área existe e tenta pegar a posição dela
        if area then
            local areaPosition = area:FindFirstChild("PrimaryPart") and area.PrimaryPart.Position or area.Position
            character:SetPrimaryPartCFrame(CFrame.new(areaPosition))
        end
    end
})

Tabs.Teleport:AddButton({
    Title = "Area2",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character
        local area = workspace.Area_Boxes["AREA 2"]

        -- Verifica se a área existe e tenta pegar a posição dela
        if area then
            local areaPosition = area:FindFirstChild("PrimaryPart") and area.PrimaryPart.Position or area.Position
            character:SetPrimaryPartCFrame(CFrame.new(areaPosition))
        end
    end
})

Tabs.Teleport:AddButton({
    Title = "Area3",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character
        local area = workspace.Area_Boxes["AREA 3"]

        -- Verifica se a área existe e tenta pegar a posição dela
        if area then
            local areaPosition = area:FindFirstChild("PrimaryPart") and area.PrimaryPart.Position or area.Position
            character:SetPrimaryPartCFrame(CFrame.new(areaPosition))
        end
    end
})

Tabs.Teleport:AddButton({
    Title = "Area4",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character
        local area = workspace.Area_Boxes["AREA 4"]

        -- Verifica se a área existe e tenta pegar a posição dela
        if area then
            local areaPosition = area:FindFirstChild("PrimaryPart") and area.PrimaryPart.Position or area.Position
            character:SetPrimaryPartCFrame(CFrame.new(areaPosition))
        end
    end
})

Tabs.Teleport:AddButton({
    Title = "Area5",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character
        local area = workspace.Area_Boxes["AREA 5"]

        -- Verifica se a área existe e tenta pegar a posição dela
        if area then
            local areaPosition = area:FindFirstChild("PrimaryPart") and area.PrimaryPart.Position or area.Position
            character:SetPrimaryPartCFrame(CFrame.new(areaPosition))
        end
    end
})

Tabs.Teleport:AddButton({
    Title = "Area6",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character
        local area = workspace.Area_Boxes["AREA 6"]

        -- Verifica se a área existe e tenta pegar a posição dela
        if area then
            local areaPosition = area:FindFirstChild("PrimaryPart") and area.PrimaryPart.Position or area.Position
            character:SetPrimaryPartCFrame(CFrame.new(areaPosition))
        end
    end
})

Tabs.Teleport:AddButton({
    Title = "Area7",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character
        local area = workspace.Area_Boxes["AREA 7"]

        -- Verifica se a área existe e tenta pegar a posição dela
        if area then
            local areaPosition = area:FindFirstChild("PrimaryPart") and area.PrimaryPart.Position or area.Position
            character:SetPrimaryPartCFrame(CFrame.new(areaPosition))
        end
    end
})